//-----------------------------------------------------
// 1.需修改的位置编号：L365323
// 2.开源框架HttpUtils
// 	HttpUtils http = new HttpUtils();  //创建出工具对象
//	HttpHandler handler = http.download(String url, String target, boolean autoResume, boolean autoRename, RequestCallBack<File> callback);  //服务器路径，本地路径，继续下载，自动重命名，重写RequestCallBack<File>
//	重写：public void onStart(){}  //开始下载
//	      public void onLoading(long total, long current, boolean isUploading){} //下载中
//	      public void onSuccess(ResponseInfo<File> responseInfo){} //下载成功
//	      public void onFailure(HttpException error, String msg){} //下载失败
// 3.java代码实现见java目录下的 [网络]多线程断点下载.txt
// 4.权限：
//	<uses-permission android:name="android.permission.INTERNET"/>
//-----------------------------------------------------

//=====================================================

public void download(View v){
  String path = et_path.getText().toString().trim();
  if(TextUtils.isEmpty(path)){
    Toast.makeText(this, "请输入下载的路径", 0).show();
    return;
  }else{
    HttpUtils http = new HttpUtils();
    HttpHandler handler = http.download(path,  //L365323 下载地址
          "/sdcard/xxx.zip",    //L365323 保存地址
          true, // 如果目标文件存在，接着未完成的部分继续下载。服务器不支持RANGE时将从新下载。
          true, // 如果从请求返回信息中获取到文件名，下载完成后自动重命名。
          new RequestCallBack<File>() {
              @Override
              public void onStart() {
                tv_info.setText("conn...");
              }
              @Override
              public void onLoading(long total, long current, boolean isUploading) {
                tv_info.setText(current + "/" + total);
              }
               @Override
              public void onSuccess(ResponseInfo<File> responseInfo) {
                tv_info.setText("downloaded:" + responseInfo.result.getPath());
              }
                @Override
              public void onFailure(HttpException error, String msg) {
               tv_info.setText(msg);
              }
      });
  }
}

//=====================================================
